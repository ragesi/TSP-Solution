1. 当前选择是否合法，即每一步的终点是否都指向了存在的节点
2. 当前选择是否指向的是其本身，即每一步的终点是否指向的都不是其自身
3. 是否存在两个选择指向的是同一个节点，即是否存在两步，其终点都指向同一个节点。

对于TSP问题中寻找最优通路问题，解决方案目前有三次迭代：
1. 首先判断每一步骤的选择是否合法，即每一步的终点是否都指向了存在的节点；之后再判断这些步骤组成的路径是否合法，即最终的路径中是否有两个步骤的终点是同一个。
在判断有效选择时，由于当时还不知道qiskit库中有判断大小的现成函数，所以我是一个一个非法选择去判断的；
在判断有效路径时，同样是两两判断是否有选择是一样的，相当于排列组合问题。
2. 为了解决更大规模的问题，产生了第二次迭代。
在判断有效选择时，使用判断大小的函数，所以就算非法的选择再多，每一步也只需要判断一次就好；
在判断有效路径时，使用和选择数量相等的量子位保存中间结果，当步骤的终点是某个选择时，就把对应位次的中间结果翻转。
因为哈密顿回路要求所有节点都走且仅走一次，所以步骤数量和选择数量是一一对应的。若有大于一个步骤指向了同一个节点，则必定有节点没有被指向，即没有被翻转。
这样一来，时间复杂度还是n^2，原来的两两组合也是n^2，但是在大规模的TSP问题中使用的量子位就少了，从n^2减少到了n
3. 原本是没有第三次迭代的，但是在测试过程中意外发现在第二次迭代中仅仅验证有效路径就已经足够了，因此电路复杂度再次减少

展望：
使用分级缓存机制设置buffer寄存器

由4个节点下，有效路径是两条，而全部选择组成的所有路径也只有4条，所以，一旦阈值设置的偏大，将所有有效路径都选中，那么一半一半的概率导致量子没有办法辨识哪个才是被选中的

将判断最小转为判断最大，首先不用害怕到最后不会标记不到值，而且距离矩阵中00、11这些距离设置为0就行，不需要再费心去取值
合理将所有距离范围限制在0到1之间，并只考虑上三角的距离，使距离最大的一定是合法路径，其它非法路径要么大于1，要么小于最大的合法路径
设置一个最小迭代次数，从而缩小范围，减少迭代次数
考虑当迭代整个Grover算法（而不是多次测量）多少次时，就可以退出了

在构造QPE算符时，GAS那篇论文中的递归方法乍一看时间复杂度确实变小了，但是运行一次target_num=2的算法需要6行，就是我最开始构造的QPE算符那样；
而现在这种方法只需要两次并行的x门和一个mcx门，因此在target_num较小的时候递归方法所用的时间差不多是现在这种方法的两倍，实验结果也确实是这样。

当找到一个更大的阈值时，下一次迭代的最小迭代次数在现在的基础上再加1（这里可以用比例增加，比例为1.4），因为新阈值限定的路径数量的期望可以认为是上一轮迭代的阈值的路径数量的一半
根据公式，可知需要的迭代次数的期望会增大1.4倍。当迭代次数超过2.5时，增大1.4倍必定会使新的迭代次数增加1。因此这里可以首先增加1，增大成功概率。
新：当找到更大阈值时，下一次迭代的最小迭代次数仍需要考虑

把这个算法去用作求哈密顿回路时，优势是成功的概率增加了，且量子比特的使用也仍然比现有算法更少

在计算最短距离之前初始化每两个点之间的距离时，要求距离越小，最终值越大；距离越大，最终值越小，且距离和最终值最好是完全线性负相关的。
这一点上可以设计实验分别测试在使用经典方法计算和使用交换门进行计算时的成功率。使用交换门的优点在于最终结果就是需要的。

现在一个重要的问题是聚类之后的精度损失和精度无法估量的问题。
我想过在划分聚类的时候对边界值不去归类，而是将它作为一个桥梁去联通两个聚类。虽然这样可以降低边界对聚类划分的影响，但是它无法消除聚类对整个TSP问题造成的两大主要干扰：
1. 聚类之后，对于每个子类需要寻找它们各自的起点和终点，但是寻找起点和终点肯定是需要一个确定的标准或者依据的，总不能凭空指定它，也不能挨个去试（这起码在目前阶段我是承受不了它的代价的）
所以，在不知道全局的全貌时，我只能用贪心的方法去将两个聚类距离最短的那两个点设置为起点和终点。就算我能够用一点全局的思想，那我也只能把目光放在

ragesi.W@proton.me
ragesi.Wang@proton.me
ragesi.Z@proton.me

重复测量次数：1000或更多
上述条件下第几次测试
该测试中的第几次迭代：所有小于等于0的迭代代表它们所在的测试并没有完结，且它们的编号从0开始，下一次迭代在本次迭代的编号基础上再减1
测试时间：以秒为单位

4_nodes success: 1, time:183.46541714668274, 21+21, total iterate times: 2

63 qubits : 12 nodes cycle, 13 nodes path
4 & 18 & 5 & 9.28 & 10.07 & 1.09 \\
5 & 20 & 19 & 16.62 & 16.62 & 1.00 \\
6 & 22 & 28 & 21.33 & 21.33 & 1.00 \\
7 & 29 & 308 & 30.07 & 30.07 & 1.00 \\
9 & 36 & 2306 & 58.86 & 58.86 & 1.00 \\
10 & 40 & 6462 & 61.00 & 61.00 & 1.00 \\